{"version":3,"sources":["PrototipoWeb/js/firebase.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","btnSignUp","document","querySelector","onclick","nombre","getElementById","value","nombreError","apellido","apellidoError","email","emailError","alerta","textContent","usuariosBdT","ref","correosExistentes","delref","push","set","apellidos","correo","once","snapshot","val","console","log","alert","flag","on","usuarios","i","length","splice","remove"],"mappings":";AAIA,IAAIA,EAAiB,CACjBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAGnBC,SAASC,cAAcV,GACvB,IAAMW,EAAWF,SAASE,WAGpBC,EAAYC,SAASC,cAAc,cACzCF,EAAUG,QAAU,WACZC,IAAAA,EAASH,SAASI,eAAe,cAAcC,MAC/CC,EAAcN,SAASC,cAAc,qBACrCM,EAAWP,SAASI,eAAe,aAAaC,MAChDG,EAAgBR,SAASC,cAAc,oBACvCQ,EAAQT,SAASI,eAAe,SAASC,MACzCK,EAAaV,SAASC,cAAc,gBAElCU,EAASX,SAASC,cAAc,iBAEjCE,GAAW,KAAXA,GAAgC,KAAbI,GAA+B,KAAVE,EACzCE,EAAOC,YAAP,qCACe,KAAXT,IAAeG,EAAYM,YAAZ,0BACF,KAAbL,IAAiBC,EAAcI,YAAd,4BACP,KAAVH,IAAcC,EAAWE,YAAX,mCACf,CACHC,YAAcf,EAASgB,IAAvB,eACMC,IAcFC,EAdED,EAAoB,GAE1BF,YAAYI,OAAOC,IAAI,CACnBf,OAAQA,EACRgB,UAAWZ,EACXa,OAAQX,IAUII,YAGRQ,KAAK,cAAe,SAASC,GAC7BN,EAASM,EAASC,QAG1BC,QAAQC,IAAIT,GACZU,MAAM,QAEFC,IAAAA,GAAO,EACXd,YAAYe,GAAG,QAAS,SAACN,GACfO,IAAAA,EAAWP,EAASC,MACrB,IAAA,IAAMO,KAAKD,EACZd,EAAkBE,KAAKY,EAASC,GAAGV,QACnCI,QAAQC,IAAII,EAASC,GAAGV,QAE5BI,QAAQC,IAAIV,GACP,IAAA,IAAIe,EAAI,EAAGA,EAAIf,EAAkBgB,OAAQD,IAC7B,GAARH,GAAmBZ,EAAkBe,IAAMrB,GAC5CkB,GAAO,EACPZ,EAAkBiB,OAAOF,EAAG,IACZ,GAARH,GAAkBZ,EAAkBe,IAAMrB,IAClDE,EAAOC,YAAc,+CACrBY,QAAQC,IAAIT,GACZA,EAAOiB,SACPH,EAAIf,EAAkBgB,OACtBL,MAAM,SAGdF,QAAQC,IAAIV","file":"firebase.67c606b2.js","sourceRoot":"..","sourcesContent":["// import { firebase } from 'firebase/app';\n// import 'firebase/auth';\n// import 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAYC2xOKqPvMKbQWxXxiQHpW3HbbDdCou0\",\n    authDomain: \"introfirebase-e7ca2.firebaseapp.com\",\n    databaseURL: \"https://introfirebase-e7ca2.firebaseio.com\",\n    projectId: \"introfirebase-e7ca2\",\n    storageBucket: \"introfirebase-e7ca2.appspot.com\",\n    messagingSenderId: \"660691288615\",\n    appId: \"1:660691288615:web:3c97023e6eeab131560402\",\n    measurementId: \"G-S3377XEK4R\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\n\n//Registro\nconst btnSignUp = document.querySelector(\"#btnSignUp\");\nbtnSignUp.onclick = () => {\n    let nombre = document.getElementById(\"first_name\").value;\n    let nombreError = document.querySelector(\".first_name-error\");\n    let apellido = document.getElementById(\"last_name\").value;\n    let apellidoError = document.querySelector(\".last_name-error\");\n    let email = document.getElementById(\"email\").value;\n    let emailError = document.querySelector(\".email-error\");\n\n    const alerta = document.querySelector(\".signup-error\");\n    // comprobar que no esté en blanco\n    if ((nombre === \"\") || (apellido === \"\") || (email === \"\")) {\n        alerta.textContent = `No pueden incluirse campos vacíos.`;\n        if (nombre === \"\") nombreError.textContent = `Debe incluir un nombre`;\n        if (apellido === \"\") apellidoError.textContent = `Debe incluir un apellido`;\n        if (email === \"\") emailError.textContent = `Ejemplo: sunombre@gmail.com`;\n    } else {\n        usuariosBdT = database.ref(`usuariosBdT`);\n        const correosExistentes = [];\n\n        usuariosBdT.push().set({\n            nombre: nombre,\n            apellidos: apellido,\n            correo: email,\n        });\n\n        // console.log(ayuda.child(\"usuariosBdT\").orderByKey());\n\n        // const ayuda = database.ref(`introfirebase-e7ca2`);\n        // let delref = ayuda.child(\"usuariosBdT\").orderByKey().limitToLast(1);\n        // console.log(delref);\n\n        let delref;\n        getLastFromList(usuariosBdT);\n\n        function getLastFromList(ref) {\n            ref.once(\"child_added\", function(snapshot) {\n                delref = snapshot.val();\n            });\n        }\n        console.log(delref);\n        alert(\"STOP\");\n\n        let flag = false;\n        usuariosBdT.on('value', (snapshot) => {\n            const usuarios = snapshot.val();\n            for (const i in usuarios) {\n                correosExistentes.push(usuarios[i].correo);\n                console.log(usuarios[i].correo);\n            }\n            console.log(correosExistentes);\n            for (let i = 0; i < correosExistentes.length; i++) {\n                if ((flag == false) && (correosExistentes[i] == email)) {\n                    flag = true;\n                    correosExistentes.splice(i, 1);\n                } else if ((flag == true) && (correosExistentes[i] == email)) {\n                    alerta.textContent = \"El correo electrónico introducido ya existe.\";\n                    console.log(delref);\n                    delref.remove();\n                    i = correosExistentes.length;\n                    alert(\"aqui\");\n                }\n            }\n            console.log(correosExistentes);\n        })\n\n\n\n        // if (correosExistentes.includes(email)) {\n        //     alert(\"nanain\");\n        //     alerta.textContent = \"El correo electrónico introducido ya existe.\";\n        // } else {\n        //     usuariosBdT.push().set({\n        //         nombre: nombre,\n        //         apellidos: apellido,\n        //         correo: email,\n        //     });\n        //     // window.location.href = \"bancodetiempo.html\";\n        // }\n\n\n    }\n\n};\n//!Registro"]}