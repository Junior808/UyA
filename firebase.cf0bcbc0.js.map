{"version":3,"sources":["PrototipoWeb/js/firebase.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","usuariosBdT","ref","correosExistentes","on","snapshot","usuarios","val","i","push","correo","btnSignUp","document","querySelector","onclick","nombre","getElementById","value","nombreError","apellido","apellidoError","email","emailError","alerta","textContent","includes","alert","localStorage","setItem","set","apellidos","horas","window","location","href"],"mappings":";AAAA,IAAIA,EAAiB,CACjBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAGnBC,SAASC,cAAcV,GACvB,IAAMW,EAAWF,SAASE,WAG1BC,YAAcD,EAASE,IAAvB,eACA,IAAMC,EAAoB,GAE1BF,YAAYG,GAAG,QAAS,SAACC,GACfC,IAAAA,EAAWD,EAASE,MACrB,IAAA,IAAMC,KAAKF,EACZH,EAAkBM,KAAKH,EAASE,GAAGE,UAK3C,IAAMC,EAAYC,SAASC,cAAc,cACzCF,EAAUG,QAAU,WACZC,IAAAA,EAASH,SAASI,eAAe,cAAcC,MAC/CC,EAAcN,SAASC,cAAc,qBACrCM,EAAWP,SAASI,eAAe,aAAaC,MAChDG,EAAgBR,SAASC,cAAc,oBACvCQ,EAAQT,SAASI,eAAe,SAASC,MACzCK,EAAaV,SAASC,cAAc,gBAElCU,EAASX,SAASC,cAAc,iBAEvB,KAAXE,GAA8B,KAAbI,GAA6B,KAAVE,GACpCE,EAAOC,YAAP,qCACe,KAAXT,IAAeG,EAAYM,YAAZ,0BACF,KAAbL,IACAC,EAAcI,YAAd,4BACU,KAAVH,IACAC,EAAWE,YAAX,gCAEArB,EAAkBsB,SAASJ,GAC3BK,MAAM,iDAENC,aAAaC,QAAQ,QAASP,GAC9BpB,YAAYQ,OAAOoB,IAAI,CACnBd,OAAQA,EACRe,UAAWX,EACXT,OAAQW,EACRU,MAAO,IAEXC,OAAOC,SAASC,KAAO","file":"firebase.cf0bcbc0.js","sourceRoot":"..","sourcesContent":["var firebaseConfig = {\n    apiKey: \"AIzaSyAYC2xOKqPvMKbQWxXxiQHpW3HbbDdCou0\",\n    authDomain: \"introfirebase-e7ca2.firebaseapp.com\",\n    databaseURL: \"https://introfirebase-e7ca2.firebaseio.com\",\n    projectId: \"introfirebase-e7ca2\",\n    storageBucket: \"introfirebase-e7ca2.appspot.com\",\n    messagingSenderId: \"660691288615\",\n    appId: \"1:660691288615:web:3c97023e6eeab131560402\",\n    measurementId: \"G-S3377XEK4R\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\n\n// Base de datos de los usuarios\nusuariosBdT = database.ref(`usuariosBdT`);\nconst correosExistentes = [];\n\nusuariosBdT.on(\"value\", (snapshot) => {\n    const usuarios = snapshot.val();\n    for (const i in usuarios) {\n        correosExistentes.push(usuarios[i].correo);\n    }\n});\n\n//Registro\nconst btnSignUp = document.querySelector(\"#btnSignUp\");\nbtnSignUp.onclick = () => {\n    let nombre = document.getElementById(\"first_name\").value;\n    let nombreError = document.querySelector(\".first_name-error\");\n    let apellido = document.getElementById(\"last_name\").value;\n    let apellidoError = document.querySelector(\".last_name-error\");\n    let email = document.getElementById(\"email\").value;\n    let emailError = document.querySelector(\".email-error\");\n\n    const alerta = document.querySelector(\".signup-error\");\n    // comprobar que no esté en blanco\n    if (nombre === \"\" || apellido === \"\" || email === \"\") {\n        alerta.textContent = `No pueden incluirse campos vacíos.`;\n        if (nombre === \"\") nombreError.textContent = `Debe incluir un nombre`;\n        if (apellido === \"\")\n            apellidoError.textContent = `Debe incluir un apellido`;\n        if (email === \"\")\n            emailError.textContent = `Ejemplo: sunombre@gmail.com`;\n    } else {\n        if (correosExistentes.includes(email)) {\n            alert(\"El correo electrónico introducido ya existe.\");\n        } else {\n            localStorage.setItem(\"email\", email);\n            usuariosBdT.push().set({\n                nombre: nombre,\n                apellidos: apellido,\n                correo: email,\n                horas: 0,\n            });\n            window.location.href = \"bancodetiempo.html\";\n        }\n    }\n};\n//!Registro\n"]}