{"version":3,"sources":["PrototipoWeb/js/mostrarbanco.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","database","banco","ref","element","document","querySelector","localStorage","getItem","once","snapshot","ofertas","val","console","log","numberId","i","contenedor","createElement","classList","add","cardHorizontal","oferta","setAttribute","title","textContent","appendChild","description","contacto","email","doc","url","addEventListener","onclick","clickDocumento","hours","pError","tiempo","actualizar","hoursInt","parseInt","referenciaUsuarios","snap","usuariosBdT","horasActuales","correo","spshot","horas","horasActualesInt","toString","update","window","location","href"],"mappings":";AAAA,IAAIA,EAAiB,CACjBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAGnBC,SAASC,cAAcV,GACvB,IAAMW,EAAWF,SAASE,WAC1BC,MAAQD,EAASE,IAAjB,cAEA,IAAMC,EAAUC,SAASC,cAAc,aAEvC,GAAIC,aAAaC,QAAQ,SACrBN,MAAMO,KAAK,QAAS,SAACC,GACXC,IAAAA,EAAUD,EAASE,MACzBC,QAAQC,IAAIH,GAERI,IAAAA,EAAW,EACJC,EAAAA,SAAAA,GACDC,IAAAA,EAAaZ,SAASa,cAAc,OAC1CD,EAAWE,UAAUC,IAAI,MAAO,MAAO,MAEjCC,IAAAA,EAAiBhB,SAASa,cAAc,OAC9CG,EAAeF,UAAUC,IAAI,OAAQ,cAE/BE,IAAAA,EAASjB,SAASa,cAAc,OACtCI,EAAOH,UAAUC,IAAI,gBACrBE,EAAOC,aAAa,KAAaR,OAAAA,OAAAA,IAE3BS,IAAAA,EAAQnB,SAASa,cAAc,OACrCM,EAAML,UAAUC,IAAI,SACpBI,EAAMC,YAAyBd,WAAAA,OAAAA,EAAQK,GAAGQ,OAC1CA,EAAMD,aAAa,WAAY,KAC/BD,EAAOI,YAAYF,GAEbG,IAAAA,EAActB,SAASa,cAAc,OAC3CS,EAAYR,UAAUC,IAAI,eAC1BO,EAAYF,YAAiBd,GAAAA,OAAAA,EAAQK,GAAGW,aACxCA,EAAYJ,aAAa,WAAY,KACrCD,EAAOI,YAAYC,GAEbC,IAAAA,EAAWvB,SAASa,cAAc,OACxCU,EAAST,UAAUC,IAAI,YACvBQ,EAASH,YAA2Bd,aAAAA,OAAAA,EAAQK,GAAGa,OAC/CD,EAASL,aAAa,WAAY,KAClCD,EAAOI,YAAYE,GAEbE,IAAAA,EAAMzB,SAASa,cAAc,KACnCY,EAAIX,UAAUC,IAAI,OAClBU,EAAIP,aAAa,OAAWZ,GAAAA,OAAAA,EAAQK,GAAGe,MACvCD,EAAIL,YAAc,uBAClBK,EAAIP,aAAa,WAAY,KAC7BO,EAAIE,iBAAiBC,QAAU,WAC3BC,OAAAA,EAAevB,EAAQK,GAAGmB,QAC9Bb,EAAOI,YAAYI,GAEnBT,EAAeK,YAAYJ,GAC3BL,EAAWS,YAAYL,GACvBjB,EAAQsB,YAAYT,GACpBF,KAzCC,IAAA,IAAMC,KAAKL,EAALK,EAAAA,SA4CZ,CACGoB,IAAAA,EAAS/B,SAASa,cAAc,KACtCkB,EAAOjB,UAAUC,IAAI,aACrBgB,EAAOX,YAAc,sDACrBW,EAAOb,aAAa,WAAY,KAChCnB,EAAQsB,YAAYU,GAGxB,SAASF,EAAeG,GAChBR,IAIAS,EAJAT,EAAQtB,aAAaC,QAAQ,SAC7B+B,EAAWC,SAASH,EAAQ,IAEhCI,mBAAqBxC,EAASE,IAA9B,eAGAsC,mBAAmBhC,KAAK,QAAS,SAACiC,GACxBC,IAOFC,EAPED,EAAcD,EAAK9B,MAEpB,IAAA,IAAMI,KAAK2B,EACRA,EAAY3B,GAAG6B,SAAWhB,IAC1BS,EAAarC,EAASE,IAAmBa,eAAAA,OAAAA,KAIjDsB,EAAW7B,KAAK,QAAS,SAACqC,GACtBF,EAAgBE,EAAOlC,MAAMmC,MAC7BC,iBAAmBR,SAASI,EAAe,IAC3CI,kBAAoBT,EACpBK,EAAgBI,iBAAiBC,SAAS,IAE1CX,EAAWY,OAAO,CACdH,MAAOH,IAEXO,OAAOC,SAASC,KAAO","file":"mostrarbanco.927de03c.js","sourceRoot":"..","sourcesContent":["var firebaseConfig = {\n    apiKey: \"AIzaSyAYC2xOKqPvMKbQWxXxiQHpW3HbbDdCou0\",\n    authDomain: \"introfirebase-e7ca2.firebaseapp.com\",\n    databaseURL: \"https://introfirebase-e7ca2.firebaseio.com\",\n    projectId: \"introfirebase-e7ca2\",\n    storageBucket: \"introfirebase-e7ca2.appspot.com\",\n    messagingSenderId: \"660691288615\",\n    appId: \"1:660691288615:web:3c97023e6eeab131560402\",\n    measurementId: \"G-S3377XEK4R\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\nbanco = database.ref(`ofertasBdT`);\n\nconst element = document.querySelector(\".elements\");\n\nif (localStorage.getItem(\"email\")) {\n    banco.once(\"value\", (snapshot) => {\n        const ofertas = snapshot.val();\n        console.log(ofertas);\n\n        let numberId = 1;\n        for (const i in ofertas) {\n            const contenedor = document.createElement(\"div\");\n            contenedor.classList.add(\"col\", \"s12\", \"l6\");\n\n            const cardHorizontal = document.createElement(\"div\");\n            cardHorizontal.classList.add(\"card\", \"horizontal\");\n\n            const oferta = document.createElement(\"div\");\n            oferta.classList.add(\"card-stacked\");\n            oferta.setAttribute(\"id\", `elem${numberId}`);\n\n            const title = document.createElement(\"div\");\n            title.classList.add(\"title\");\n            title.textContent = `Título: ${ofertas[i].title}`;\n            title.setAttribute(\"tabindex\", \"0\");\n            oferta.appendChild(title);\n\n            const description = document.createElement(\"div\");\n            description.classList.add(\"description\");\n            description.textContent = `${ofertas[i].description}`;\n            description.setAttribute(\"tabindex\", \"0\");\n            oferta.appendChild(description);\n\n            const contacto = document.createElement(\"div\");\n            contacto.classList.add(\"contacto\");\n            contacto.textContent = `Contacto: ${ofertas[i].email}`;\n            contacto.setAttribute(\"tabindex\", \"0\");\n            oferta.appendChild(contacto);\n\n            const doc = document.createElement(\"a\");\n            doc.classList.add(\"btn\");\n            doc.setAttribute(\"href\", `${ofertas[i].url}`);\n            doc.textContent = \"Acceder al documento\";\n            doc.setAttribute(\"tabindex\", \"0\");\n            doc.addEventListener.onclick = () =>\n                clickDocumento(ofertas[i].hours);\n            oferta.appendChild(doc);\n\n            cardHorizontal.appendChild(oferta);\n            contenedor.appendChild(cardHorizontal);\n            element.appendChild(contenedor);\n            numberId++;\n        }\n    });\n} else {\n    const pError = document.createElement(\"p\");\n    pError.classList.add(\"error-msg\");\n    pError.textContent = \"Inicie sesión o regístrese para ver los documentos.\";\n    pError.setAttribute(\"tabindex\", \"0\");\n    element.appendChild(pError);\n}\n\nfunction clickDocumento(tiempo) {\n    let email = localStorage.getItem(\"email\");\n    let hoursInt = parseInt(tiempo, 10); // pasar a entero en base 10\n\n    referenciaUsuarios = database.ref(`usuariosBdT`);\n    let actualizar;\n\n    referenciaUsuarios.once(\"value\", (snap) => {\n        const usuariosBdT = snap.val();\n\n        for (const i in usuariosBdT) {\n            if (usuariosBdT[i].correo === email) {\n                actualizar = database.ref(`usuariosBdT/${i}`);\n            }\n        }\n        let horasActuales;\n        actualizar.once(\"value\", (spshot) => {\n            horasActuales = spshot.val().horas;\n            horasActualesInt = parseInt(horasActuales, 10);\n            horasActualesInt -= hoursInt;\n            horasActuales = horasActualesInt.toString(10);\n\n            actualizar.update({\n                horas: horasActuales,\n            });\n            window.location.href = \"bancodetiempo.html\";\n        });\n    });\n}\n"]}